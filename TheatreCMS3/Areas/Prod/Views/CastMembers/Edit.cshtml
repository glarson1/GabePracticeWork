@model TheatreCMS3.Areas.Prod.Models.CastMember

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="CastMember-FormContainer">
    
    <div class="form-horizontal">
        <header class="text-center">
            <h4>Create CastMember</h4>
        </header>
           
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CastMemberId)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Item" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.YearJoined, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.YearJoined, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Year" } })
                    @Html.ValidationMessageFor(model => model.YearJoined, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MainRole, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EnumDropDownListFor(model => model.MainRole, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Description" })
                    @Html.ValidationMessageFor(model => model.MainRole, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Item" } })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Photo" } })
                    @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CurrentMember, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CurrentMember)
                        @Html.ValidationMessageFor(model => model.CurrentMember, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Character, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.Character, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Character" } })
                    @Html.ValidationMessageFor(model => model.Character, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CastYearLeft, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.CastYearLeft, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Years" } })
                    @Html.ValidationMessageFor(model => model.CastYearLeft, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DebutYear, htmlAttributes: new { @class = "control-label" })
                <div class="CastMember-Edit--Input">
                    @Html.EditorFor(model => model.DebutYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Year" } })
                    @Html.ValidationMessageFor(model => model.DebutYear, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn CastMember-CreateEdit--CreateButton" />
                    <input type="submit" value="Back To List" onclick="location.href='@Url.Action("Index", "CastMember")'" class="btn CastMember-CreateEdit--BackButton" />
                </div>
            </div>
        </div>
</div>
}

<

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
